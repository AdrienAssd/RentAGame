---
import GameCard from '../components/GameCard.astro';
import Layout from '../layouts/Layout.astro';

const page = 1; // Page initiale
const limit = 10; // Nombre de jeux par page
const response = await fetch(`https://rentagame-production-81ca.up.railway.app/api/games?page=${page}&limit=${limit}`, {
  credentials: 'include',
  headers: {
    'Origin': 'https://rent-a-game-lac.vercel.app', // Ajoute explicitement l'origine
  }
});
const games = await response.json();
---

<Layout>
  <header class="flex justify-between items-center p-4 shadow bg-white">
    <div class="flex items-center gap-2">
      <img src="/images/LogoRentAGame.png" alt="Logo" class="h-10" loading="lazy">
      <h1 class="text-xl font-bold">Liste des jeux</h1>
    </div>
    <nav class="space-x-4">
      <a href="/" class="font-medium">Liste des jeux</a>
      <a href="/apropos" class="text-gray-600 hover:text-black">√Ä propos</a>
      <a href="/contact" class="text-gray-600 hover:text-black">Contact</a>
      <a href="/login" class="bg-black text-white px-4 py-2 rounded hover:bg-gray-800 hidden" id="login-btn">Connexion</a>
    </nav>
  </header>
  <div class="flex">
    <main class="flex-1 p-6">
      <!-- Barre de recherche -->
      <div class="mb-4 flex items-center gap-2">
        <input 
          type="text" 
          id="search-input" 
          placeholder="Rechercher un jeu..." 
          class="flex-1 px-4 py-2 border rounded-full focus:outline-none focus:ring-2 focus:ring-purple-400"
        />
        <button 
          id="search-button" 
          class="p-2 bg-purple-600 text-white rounded-full hover:bg-purple-700"
          title="Rechercher"
        >
          üîç
        </button>
      </div>

      <!-- Menu d√©roulant des cat√©gories -->
      <div class="mb-4">
        <select id="category-select" class="px-4 py-2 border rounded">
          <option value="">Toutes les cat√©gories</option>
          <!-- Les options des cat√©gories seront ajout√©es dynamiquement -->
        </select>
      </div>

      <div id="games-list" class="grid grid-cols-5 gap-4">
        <!-- Les cartes de jeux seront ajout√©es dynamiquement -->
      </div>

      <button id="load-more" class="mt-4 px-4 py-2 bg-purple-600 text-white rounded hover:bg-purple-700">
        Afficher plus
      </button>
    </main>
  </div>

  <script is:inline type="module">
    let currentSearchQuery = '';
    let categories = [];
    window.addEventListener('DOMContentLoaded', async () => {
      // R√©f√©rences DOM
      const loadMoreButton  = document.getElementById('load-more');
      const gamesList       = document.getElementById('games-list');
      const searchInput     = document.getElementById('search-input');
      const searchButton    = document.getElementById('search-button');
      const categorySelect  = document.getElementById('category-select');
  
      // R√©cup√©rer les cat√©gories depuis l'API
      const categoriesResponse = await fetch('https://rentagame-production-81ca.up.railway.app/api/categories', {
        credentials: 'include',
        headers: { 'Origin': 'https://rent-a-game-lac.vercel.app' }
      });
      categories = await categoriesResponse.json();
      // Remplir le menu d√©roulant des cat√©gories
      categories.forEach((cat) => {
        const option = document.createElement('option');
        option.value = cat;
        option.textContent = cat;
        categorySelect.appendChild(option);
      });

      // Fonction de g√©n√©ration des cartes de jeux
      function createGameCardHtml(game) {
        return `
          <a href="/game/${game.slug}" class="game-card-link">
            <article class="game-card">
              <div class="bg-white rounded shadow p-2" id="${game.slug}">
                <img src="${game.image}" alt="${game.title}" class="w-full h-32 object-cover rounded" loading="lazy" />
                <h2 class="text-sm font-bold mt-2">${game.title}</h2>
                <div class="flex justify-between items-center text-xs text-gray-500">
                  <span>${game.minplayers} - ${game.maxplayers} joueurs</span>
                  <span>${game.minage}+</span>
                </div>
              </div>
            </article>
          </a>
        `;
      }

      // Affiche les jeux dans le DOM
      function renderGames(games) {
        gamesList.innerHTML = games.map(createGameCardHtml).join('');
      }

      // Fonction de chargement des jeux avec pagination
      async function loadGamesPage(page) {
        const searchQuery = currentSearchQuery ? `&search=${encodeURIComponent(currentSearchQuery)}` : '';
        const catQuery = currentCategory ? `&category=${encodeURIComponent(currentCategory)}` : '';
        const res = await fetch(`https://rentagame-production-81ca.up.railway.app/api/games?page=${page}&limit=10${catQuery}${searchQuery}`, { credentials: 'include' });
        const newGames = await res.json();
        if (page === 1) {
          renderGames(newGames);
        } else {
          appendGames(newGames);
        }
        if (newGames.length < 10) {
          loadMoreButton.disabled = true;
          loadMoreButton.textContent = 'Tous les jeux sont affich√©s';
        }
      }

      // Chargement des jeux √† la premi√®re page
      loadGamesPage(1);

      // Fonction pour ajouter plus de jeux
      function appendGames(games) {
        gamesList.innerHTML += games.map(createGameCardHtml).join('');
      }

      // Afficher plus au clic
      loadMoreButton.addEventListener('click', async () => {
        currentPage++;
        await loadGamesPage(currentPage);
      });

      // Recherche des jeux
      searchButton.addEventListener('click', () => {
        const query = searchInput.value.trim();
        if (query) {
          currentSearchQuery = query;
          loadGamesPage(1);
        }
      });

      searchInput.addEventListener('keydown', (e) => {
        if (e.key === 'Enter') {
          const query = searchInput.value.trim();
          if (query) {
            currentSearchQuery = query;
            loadGamesPage(1);
          }
        }
      });

      // Filtrage par cat√©gorie
      categorySelect.addEventListener('change', async (e) => {
        currentCategory = e.target.value;
        loadGamesPage(1);
      });
    });
  </script>
</Layout>
